/* Generated by Babel */
"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Web = (function (_React$Component) {
    _inherits(Web, _React$Component);

    function Web(props) {
        _classCallCheck(this, Web);

        _get(Object.getPrototypeOf(Web.prototype), "constructor", this).call(this, props);
        this.state = { imgpath: "./imagenes/" };
    }

    _createClass(Web, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "container-fluid" },
                React.createElement(
                    "div",
                    { id: "cnBarraNav" },
                    React.createElement(Barranav, { imgpath: this.state.imgpath })
                ),
                React.createElement(
                    "div",
                    { id: "contenido" },
                    React.createElement(
                        "div",
                        { id: "homeSlide" },
                        React.createElement(Carrousel, { imgpath: this.state.imgpath })
                    ),
                    React.createElement(
                        "div",
                        { id: "promos" },
                        React.createElement(Promociones, { imgpath: this.state.imgpath })
                    ),
                    React.createElement(
                        "div",
                        { id: "servicios" },
                        React.createElement(Servicios, { imgpath: this.state.imgpath })
                    ),
                    React.createElement(
                        "div",
                        { id: "acerca" },
                        React.createElement(Acerca, { imgpath: this.state.imgpath })
                    ),
                    React.createElement(
                        "div",
                        { id: "contacto" },
                        React.createElement(Contacto, { imgpath: this.state.imgpath })
                    )
                )
            );
        }
    }]);

    return Web;
})(React.Component);

function Barranav(props) {
    return React.createElement(
        "nav",
        { className: "navbar navbar-expand-md fixed-top bg-light navbar-light", id: "navbar" },
        React.createElement(
            "div",
            { className: "logo" },
            React.createElement(
                "a",
                { className: "navbar-brand", href: "#", id: "navbarbrand" },
                React.createElement("img", { src: props.imgpath + "logo.svg" })
            )
        ),
        React.createElement(
            "button",
            { className: "navbar-toggler navbar-toggler-left", type: "button", "data-toggle": "collapse", "data-target": "#navb" },
            React.createElement("span", { className: "navbar-toggler-icon" })
        ),
        React.createElement(
            "div",
            { className: "navbar-collapse collapse justify-content-end", id: "navb" },
            React.createElement(
                "ul",
                { className: "navbar-nav" },
                React.createElement(
                    "li",
                    { className: "nav-item" },
                    React.createElement(NavbarTgl, {
                        firslst: 1,
                        href: "#promos",
                        text: "Promociones" })
                ),
                React.createElement(
                    "li",
                    { className: "nav-item" },
                    React.createElement(NavbarTgl, {
                        firslst: 0,
                        href: "#servicios",
                        text: "Servicios" })
                ),
                React.createElement(
                    "li",
                    { className: "nav-item" },
                    React.createElement(NavbarTgl, {
                        firslst: 0,
                        href: "#acerca",
                        text: "Acerca" })
                ),
                React.createElement(
                    "li",
                    { className: "nav-item" },
                    React.createElement(NavbarTgl, {
                        firslst: 2,
                        href: "#contacto",
                        text: "Contacto" })
                )
            )
        )
    );
}

var NavbarTgl = (function (_React$Component2) {
    _inherits(NavbarTgl, _React$Component2);

    function NavbarTgl(props) {
        _classCallCheck(this, NavbarTgl);

        _get(Object.getPrototypeOf(NavbarTgl.prototype), "constructor", this).call(this, props);
        this.state = { width: 0, height: 0 };
        this.updateWinDim = this.updateWinDim.bind(this);
    }

    _createClass(NavbarTgl, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.updateWinDim();
            window.addEventListener('resize', this.updateWinDim);
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            window.removeEventListener('resize', this.updateWinDim);
        }
    }, {
        key: "updateWinDim",
        value: function updateWinDim() {
            this.setState({ width: window.innerWidth,
                height: window.innerHeight });
        }
    }, {
        key: "render",
        value: function render() {
            var wwidth = this.state.width;

            if (wwidth < 768) {
                // TABLET
                return React.createElement(RndNavbar, {
                    disp: 1,
                    index: this.props.firslst,
                    href: this.props.href,
                    text: this.props.text });
            } else {
                // DESKTOP
                return React.createElement(RndNavbar, {
                    disp: 0,
                    index: this.props.firslst,
                    href: this.props.href,
                    text: this.props.text });
            }
        }
    }]);

    return NavbarTgl;
})(React.Component);

function RndNavbar(props) {

    if (props.disp == 0) {
        // DESKTOP
        return React.createElement(
            "a",
            { className: "nav-link", href: props.href },
            props.text
        );
    } else {
        // TABLET
        if (props.index == 1) {
            //primer item
            return React.createElement(
                "span",
                { className: "navbar-toggler", "data-toggle": "collapse", "data-target": "#navb" },
                React.createElement(
                    "a",
                    { className: "nav-link", id: "pr", href: props.href },
                    props.text
                )
            );
        } else if (props.index == 0) {
            //item intermedio
            return React.createElement(
                "span",
                { className: "navbar-toggler", "data-toggle": "collapse", "data-target": "#navb" },
                React.createElement(
                    "a",
                    { className: "nav-link", href: props.href },
                    props.text
                )
            );
        } else if (props.index == 2) {
            //Ãºltimo item
            return React.createElement(
                "span",
                { className: "navbar-toggler", "data-toggle": "collapse", "data-target": "#navb" },
                React.createElement(
                    "a",
                    { className: "nav-link", id: "ul", href: props.href },
                    props.text
                )
            );
        }
    }
}

var Carrousel = (function (_React$Component3) {
    _inherits(Carrousel, _React$Component3);

    function Carrousel(props) {
        _classCallCheck(this, Carrousel);

        _get(Object.getPrototypeOf(Carrousel.prototype), "constructor", this).call(this, props);
        this.state = {
            elementos: 3,
            elactivo: [true, false, false]
        };
        this.hBclick = this.hBclick.bind(this);
    }

    _createClass(Carrousel, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.setTimer();
        }
    }, {
        key: "setTimer",
        value: function setTimer() {
            var _this = this;

            this.timerID = setInterval(function () {
                return _this.tick();
            }, 8000);
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            this.clearTimer();
        }
    }, {
        key: "clearTimer",
        value: function clearTimer() {
            clearInterval(this.timerID);
        }
    }, {
        key: "tick",
        value: function tick() {
            //buscar el elemento true dentro del array y devolver index
            var elActivo = this.state.elactivo.indexOf(true);
            var newarray = this.state.elactivo.map(function (x) {
                return false;
            });
            var elementos = this.state.elementos;

            //por cada tick pasar al siguiente elemento y hacer
            //efecto opacity
            if (!(elActivo + 1 > elementos - 1)) {
                elActivo++;
            } else {
                elActivo = 0;
            }
            newarray[elActivo] = true;
            this.setState({ elactivo: newarray });
        }
    }, {
        key: "hBclick",
        value: function hBclick(e) {
            //creo un array nuevo y lo seteo con el id
            var newarray = this.state.elactivo.map(function (x) {
                return false;
            });
            newarray[e] = true;
            this.setState({ elactivo: newarray });

            //Reiniciar timer
            this.clearTimer();
            this.setTimer();
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var imgarr = ["mascotas.jpg", "347.jpg", "perro-y-gato.jpg"];
            var titarr = ["ATENCIÃN PROFESIONAL A DOMICILIO", "32 AÃOS DE EXPERIENCIA", "PENSIÃN DE MASCOTAS"];
            var parrarr = ["Realizamos consultas profesionales a domicilio para su comodidad y la de su mascota. Trabajamos en Capital Federal y Zona Norte.", "Cuidando la salud de su mascota con amor y dedicaciÃ³n, realizando consultas generales, urgencias, vacunaciones y anÃ¡lisis clÃ­nicos.", "Cuidamos a su mascota dandole la seguridad y el cariÃ±o que se merece para que se sienta como en casa."];
            var elact = this.state.elactivo.indexOf(true);

            return React.createElement(
                "div",
                { id: "cnCarr" },
                React.createElement(ElemCarr, {
                    img: this.props.imgpath + imgarr[elact],
                    tit: titarr[elact],
                    parr: parrarr[elact] }),
                React.createElement(BotoneraCarr, {
                    imgpath: this.props.imgpath,
                    cbotones: this.state.elementos,
                    botactivo: this.state.elactivo,
                    onClickBut: function (index) {
                        return _this2.hBclick(index);
                    } })
            );
        }
    }]);

    return Carrousel;
})(React.Component);

function ElemCarr(props) {
    return React.createElement(
        "div",
        { className: "cnelemcarr" },
        React.createElement(
            "div",
            { className: "row", id: "rowcarr" },
            React.createElement(
                "div",
                { className: "col-md", id: "imgcarr" },
                React.createElement(
                    "div",
                    { className: "imgElim" },
                    React.createElement("img", { src: props.img })
                )
            ),
            React.createElement(
                "div",
                { className: "col-md", id: "coltitparr" },
                React.createElement(
                    "div",
                    { className: "titpar" },
                    React.createElement(
                        "h2",
                        null,
                        props.tit
                    ),
                    React.createElement(
                        "p",
                        null,
                        props.parr
                    )
                )
            )
        )
    );
}

var BotoneraCarr = (function (_React$Component4) {
    _inherits(BotoneraCarr, _React$Component4);

    function BotoneraCarr(props) {
        _classCallCheck(this, BotoneraCarr);

        _get(Object.getPrototypeOf(BotoneraCarr.prototype), "constructor", this).call(this, props);
    }

    _createClass(BotoneraCarr, [{
        key: "render",
        value: function render() {
            var _this3 = this;

            var botones = this.props.botactivo.map(function (item, index) {
                return React.createElement(BtnBotonera, {
                    key: index,
                    imgpath: _this3.props.imgpath,
                    bact: item,
                    onButClick: function () {
                        return _this3.props.onClickBut(index);
                    } });
            });

            return React.createElement(
                "div",
                { id: "cnbotonera" },
                botones
            );
        }
    }]);

    return BotoneraCarr;
})(React.Component);

var BtnBotonera = (function (_React$Component5) {
    _inherits(BtnBotonera, _React$Component5);

    function BtnBotonera(props) {
        _classCallCheck(this, BtnBotonera);

        _get(Object.getPrototypeOf(BtnBotonera.prototype), "constructor", this).call(this, props);
    }

    _createClass(BtnBotonera, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "button",
                { className: "btnbotonera", onClick: this.props.onButClick },
                React.createElement("img", { src: this.props.imgpath + (this.props.bact ? 'btn1.svg' : 'btn0.svg') })
            );
        }
    }]);

    return BtnBotonera;
})(React.Component);

var Promociones = (function (_React$Component6) {
    _inherits(Promociones, _React$Component6);

    function Promociones(props) {
        _classCallCheck(this, Promociones);

        _get(Object.getPrototypeOf(Promociones.prototype), "constructor", this).call(this, props);
    }

    _createClass(Promociones, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { id: "cnPromos" },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md", id: "titulo" },
                        React.createElement(
                            "h1",
                            null,
                            "PROMOCIONES"
                        )
                    )
                ),
                React.createElement(ElemPromos, { flipped: false,
                    titulo: "BAÃO Y PELUQUERÃA",
                    parrafo: "La belleza de su mascota es nuestra prioridad. Ofrecemos descuentos en baÃ±os y peluquerÃ­as, comunÃ­quese con nosotros y pida su turno.",
                    imgPath: this.props.imgpath + '756803-22.jpg' }),
                React.createElement(ElemPromos, { flipped: true,
                    titulo: "CONSULTA Y VACUNACIÃN",
                    parrafo: "La salud de su mascota es nuestra prioridad. Ofrecemos descuentos en consultas a domicilio y vacunaciÃ³n, comunÃ­quese con nosotros y pida un turno.",
                    imgPath: this.props.imgpath + '756802-11.jpg' })
            );
        }
    }]);

    return Promociones;
})(React.Component);

var ElemPromos = (function (_React$Component7) {
    _inherits(ElemPromos, _React$Component7);

    function ElemPromos(props) {
        _classCallCheck(this, ElemPromos);

        _get(Object.getPrototypeOf(ElemPromos.prototype), "constructor", this).call(this, props);
        this.state = { width: 0, height: 0 };
        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);
    }

    _createClass(ElemPromos, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.updateWindowDimensions();
            window.addEventListener('resize', this.updateWindowDimensions);
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            window.removeEventListener('resize', this.updateWindowDimensions);
        }
    }, {
        key: "updateWindowDimensions",
        value: function updateWindowDimensions() {
            this.setState({ width: window.innerWidth,
                height: window.innerHeight });
        }
    }, {
        key: "render",
        value: function render() {
            //Si no estÃ¡ flippeado y el ancho de la ventana es > a 1086
            var winwidth = this.state.width;

            if (!this.props.flipped && winwidth > 1086) {
                return React.createElement(
                    "div",
                    { className: "row", id: "elempromos" },
                    React.createElement(
                        "div",
                        { className: "col-md", id: "titparbot" },
                        React.createElement(
                            "div",
                            { className: "titPromos" },
                            React.createElement(
                                "h2",
                                null,
                                this.props.titulo
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "parrPromos" },
                            React.createElement(
                                "p",
                                null,
                                this.props.parrafo
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "botSolic" },
                            React.createElement(
                                "a",
                                { href: "#contacto", "class": "btn btn-primary" },
                                "SOLICITAR TURNO"
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md", id: "imgpromos" },
                        React.createElement(
                            "div",
                            { className: "imgPromos" },
                            React.createElement("img", { src: this.props.imgPath })
                        )
                    )
                );
            } else {
                return React.createElement(
                    "div",
                    { className: "row", id: "elempromos" },
                    React.createElement(
                        "div",
                        { className: "col-md", id: "imgpromos" },
                        React.createElement(
                            "div",
                            { className: "imgPromos" },
                            React.createElement("img", { src: this.props.imgPath })
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md", id: "titparbot" },
                        React.createElement(
                            "div",
                            { className: "titPromos" },
                            React.createElement(
                                "h2",
                                null,
                                this.props.titulo
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "parrPromos" },
                            React.createElement(
                                "p",
                                null,
                                this.props.parrafo
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "botSolic" },
                            React.createElement(
                                "a",
                                { href: "#contacto", "class": "btn btn-primary" },
                                "SOLICITAR TURNO"
                            )
                        )
                    )
                );
            }
        }
    }]);

    return ElemPromos;
})(React.Component);

var Servicios = (function (_React$Component8) {
    _inherits(Servicios, _React$Component8);

    function Servicios(props) {
        _classCallCheck(this, Servicios);

        _get(Object.getPrototypeOf(Servicios.prototype), "constructor", this).call(this, props);
    }

    _createClass(Servicios, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { id: "cnServicios" },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md", id: "titulo" },
                        React.createElement(
                            "h1",
                            null,
                            "SERVICIOS"
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "row", id: "cnelemserv" },
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "consultas.svg",
                        titulo: "CONSULTAS",
                        parrafo: "Realizamos consultas profesionales a domicilio en la comodidad de su hogar. En Capital Federal y Zona Norte." }),
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "vacunacion.svg",
                        titulo: "VACUNACIÃN",
                        parrafo: "Cuidamos la salud de su mascota con las mejores vacunas disponibles en el mercado." }),
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "analisis.svg",
                        titulo: "ANÃLISIS CLÃNICOS",
                        parrafo: "Realizamos anÃ¡lisis clÃ­nicos. Para estudios mÃ¡s especificos los derivamos a laboratorios especializados." }),
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "peluquerias.svg",
                        titulo: "PELUQUERÃAS",
                        parrafo: "Mantener el pelaje de su mascota no solo es una cuestiÃ³n estÃ©tica sino tambiÃ©n de salud.\nOfrecemos baÃ±os, cortes de pelo y de uÃ±as." }),
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "pensiones.svg",
                        titulo: "PENSIONES",
                        parrafo: "Cuidamos a su mascota dandole la seguridad y el cariÃ±o que se merece para que se sienta como en casa." }),
                    React.createElement(ElemServ, {
                        imgsrc: this.props.imgpath + "certificados.svg",
                        titulo: "CERTIFICADOS",
                        parrafo: "Realizamos certificados para que su mascota viaje sin problemas." })
                )
            );
        }
    }]);

    return Servicios;
})(React.Component);

function ElemServ(props) {
    return React.createElement(
        "div",
        { className: "col-md", id: "elemserv" },
        React.createElement(
            "div",
            { className: "elemImg" },
            React.createElement("img", { src: props.imgsrc })
        ),
        React.createElement(
            "h3",
            null,
            props.titulo
        ),
        React.createElement(
            "p",
            null,
            props.parrafo
        )
    );
}

var Acerca = (function (_React$Component9) {
    _inherits(Acerca, _React$Component9);

    function Acerca(props) {
        _classCallCheck(this, Acerca);

        _get(Object.getPrototypeOf(Acerca.prototype), "constructor", this).call(this, props);
    }

    _createClass(Acerca, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { id: "cnAcerca" },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md", id: "titulo" },
                        React.createElement(
                            "h1",
                            null,
                            "ACERCA"
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "row", id: "cnelimg" },
                    React.createElement(ElimgTp, {
                        img: this.props.imgpath + "Tito.jpg",
                        tit: "32 AÃOS AL SERVICIO DE SU MASCOTA",
                        parr: "Cuidando la salud de su mascota con amor y dedicaciÃ³n, realizando consultas generales, urgencias, vacunaciones, operaciones, anÃ¡lisis clÃ­nicos, baÃ±os y peluquerÃ­as." })
                ),
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md-6", id: "cnMaria" },
                        React.createElement(
                            "h2",
                            null,
                            "MARÃA GABRIELA BALZOLA, MÃDICA VETERINARIA."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Gabriela estudiÃ³ y se recibiÃ³ en la Facultad de Ciencias Veterinarias perteneciente a la Universidad de Buenos Aires. Desde entonces trabajÃ³ en veterinarias con otros profesionales y de forma autÃ³noma."
                        )
                    ),
                    React.createElement("div", { className: "col", id: "colfantasma" })
                )
            );
        }
    }]);

    return Acerca;
})(React.Component);

function ElimgTp(props) {
    return React.createElement(
        "div",
        { className: "row", id: "rowelem" },
        React.createElement(
            "div",
            { className: "col-md", id: "imgelim" },
            React.createElement(
                "div",
                { className: "imgElim" },
                React.createElement("img", { src: props.img })
            )
        ),
        React.createElement(
            "div",
            { className: "col-md", id: "titpar" },
            React.createElement(
                "h2",
                null,
                props.tit
            ),
            React.createElement(
                "p",
                null,
                props.parr
            )
        )
    );
}

var Contacto = (function (_React$Component10) {
    _inherits(Contacto, _React$Component10);

    function Contacto(props) {
        _classCallCheck(this, Contacto);

        _get(Object.getPrototypeOf(Contacto.prototype), "constructor", this).call(this, props);
    }

    _createClass(Contacto, [{
        key: "render",
        value: function render() {
            // <label for="name" class="col-md-2 col-form-label">Nombre: </label>
            // <input className="form-control" type="text" id="name" />
            // <button type="button" className="btn btn-primary">ENVIAR</button>
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "div",
                    { id: "cnContacto" },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-md", id: "titulo" },
                            React.createElement(
                                "h1",
                                null,
                                "CONTACTO"
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-md", id: "subtit" },
                            React.createElement(
                                "p",
                                null,
                                "PodÃ©s contactarme o solicitar un turno a travÃ©s de los siguientes medios:"
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row", id: "cndatosyform" },
                        React.createElement(
                            "div",
                            { className: "col-md", id: "cnDatos" },
                            React.createElement(
                                "p",
                                null,
                                React.createElement(
                                    "strong",
                                    null,
                                    "DRA. MARÃA GABRIELA BALZOLA"
                                )
                            ),
                            React.createElement(
                                "ul",
                                { className: "list-group list-group-flush" },
                                React.createElement(Dato, {
                                    icnsrc: this.props.imgpath + "icn_whatsapp.png",
                                    txt: "11 3615-0796" }),
                                React.createElement(DatoLnk, {
                                    icnsrc: this.props.imgpath + "icn_mail.png",
                                    href: "mailto: m.balzola@gmail.com",
                                    txtLnk: "m.balzola@gmail.com" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md", id: "cnForm" },
                            React.createElement(
                                "form",
                                { method: "POST" },
                                React.createElement(
                                    "div",
                                    { className: "form-group row", id: "formgroup" },
                                    React.createElement(
                                        "label",
                                        { htmlFor: "name", "class": "col-md-2 col-form-label" },
                                        "Nombre: "
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "col-md-10" },
                                        React.createElement("input", { className: "form-control inp-name", type: "text", name: "name" })
                                    )
                                ),
                                React.createElement(
                                    "div",
                                    { className: "form-group row", id: "formgroup" },
                                    React.createElement(
                                        "label",
                                        { htmlFor: "email", "class": "col-md-2 col-form-label" },
                                        "E-mail: "
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "col-md-10" },
                                        React.createElement("input", { type: "email", className: "form-control inp-mail", name: "email" })
                                    )
                                ),
                                React.createElement(
                                    "div",
                                    { className: "form-group row", id: "formgroup" },
                                    React.createElement(
                                        "label",
                                        { htmlFor: "msg", "class": "col-md-2 col-form-label" },
                                        "Mensaje: "
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "col-md-10" },
                                        React.createElement("textarea", { className: "form-control inp-text", rows: "6", name: "msg" })
                                    ),
                                    React.createElement("div", { className: "col-md-2", id: "frmcolbut" }),
                                    React.createElement(
                                        "div",
                                        { className: "col-md-10", id: "frmcolbut" },
                                        React.createElement("input", { className: "btn btn-primary btn-send-form", type: "submit" })
                                    )
                                )
                            )
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { id: "cnFooter" },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-md" },
                            React.createElement(
                                "p",
                                null,
                                "Â© Copyright 2020 Consultas a domicilio â¢ Todos los derechos reservados â¢ DiseÃ±o: ",
                                React.createElement(
                                    "a",
                                    { href: "http://dragonfly-studio.000webhostapp.com" },
                                    React.createElement("img", { src: "./imagenes/Logo-web-white.png" })
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Contacto;
})(React.Component);

function Dato(props) {
    return React.createElement(
        "div",
        { className: "row", id: "cnDato" },
        React.createElement(
            "div",
            { className: "col-1" },
            React.createElement(
                "div",
                { className: "imgDato" },
                React.createElement("img", { src: props.icnsrc })
            )
        ),
        React.createElement(
            "div",
            { className: "col-11" },
            React.createElement(
                "p",
                null,
                props.txt
            )
        )
    );
}

function DatoLnk(props) {
    return React.createElement(
        "div",
        { className: "row", id: "cnDato" },
        React.createElement(
            "div",
            { className: "col-1" },
            React.createElement(
                "div",
                { className: "imgDato" },
                React.createElement("img", { src: props.icnsrc })
            )
        ),
        React.createElement(
            "div",
            { className: "col-11" },
            React.createElement(
                "a",
                { href: props.href },
                props.txtLnk
            )
        )
    );
}

ReactDOM.render(React.createElement(Web, null), document.getElementById('root'));